## GitHub Actions: Build release artifacts (Linux only)
## - Trigger: push of tags matching v*
## - Linux: setup via scripts/setup.sh, build with PyInstaller, package via scripts/package.sh
name: release
on:
  push:
    tags: ["v*"]

jobs:
  linux:
    runs-on: ubuntu-22.04
    steps:
      # Checkout source code
      - uses: actions/checkout@v4
      # Install Python 3.10 and enable pip cache
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
      # Single provider-neutral release command
      - name: Build and package (one command)
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_KEY_ID: ${{ vars.GPG_KEY_ID }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          if [[ "${{ vars.SIGN_RELEASE }}" == "true" ]]; then
            bash scripts/release.sh --version "${{ github.ref_name }}" --sign
          else
            bash scripts/release.sh --version "${{ github.ref_name }}"
          fi
      # Upload packaged artifacts (release/**)
      - uses: actions/upload-artifact@v4
        with:
          name: wikidpad-linux
          path: release/**

  publish:
    # Provider-neutral publish step (GitHub path uses gh CLI)
    # Gate: requires repository variable PUBLISH_RELEASE == 'true'
    needs: [linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && vars.PUBLISH_RELEASE == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: wikidpad-linux
          path: release-assets/linux
      - name: Generate release notes from CHANGELOG
        run: |
          mkdir -p release-assets
          bash scripts/release_notes.sh --version "${{ github.ref_name }}" --out release-assets/RELEASE_NOTES.md
      - name: Publish via scripts/publish.sh (github)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          bash scripts/publish.sh \
            --target github \
            --version "${{ github.ref_name }}" \
            --input release-assets/linux \
            --notes release-assets/RELEASE_NOTES.md
